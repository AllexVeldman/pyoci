# Run the examples against the (just deployed) live environment
name: Examples

on:
  workflow_call:

  pull_request:
    paths:
      - 'docs/examples/**'
      - '.github/workflows/examples.yaml'

permissions:
  packages: write
  contents: read

jobs:
  poetry:
    name: Poetry
    runs-on: ubuntu-latest
    timeout-minutes: 2

    env:
      # pyoci.com scales down to 0 replicas
      # allow a longer request time if a cold start is needed
      POETRY_REQUESTS_TIMEOUT: 30
      TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
      - uses: extractions/setup-just@v3

      - run: pip install poetry

      - name: Version
        id: version
        run: |
          echo "VERSION=0.0.1+example-${{ github.run_attempt }}-poetry-$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Publish
        run: |
          just examples poetry-publish "${{ steps.version.outputs.VERSION }}" "${{ github.actor }}" "$TOKEN" "https://pyoci.com/ghcr.io/allexveldman/"

      - name: Install
        run: |
          just examples poetry-install "${{ steps.version.outputs.VERSION }}" "${{ github.actor }}" "$TOKEN" "https://pyoci.com/ghcr.io/allexveldman/"

  uv:
    name: uv
    runs-on: ubuntu-latest
    timeout-minutes: 2

    env:
      TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
      - uses: extractions/setup-just@v3

      - run: pip install uv

      - name: Version
        id: version
        run: |
          echo "VERSION=0.0.1+example-${{ github.run_attempt }}-uv-$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Publish
        run: |
          just examples uv-publish "${{ steps.version.outputs.VERSION }}" "${{ github.actor }}" "$TOKEN" "https://pyoci.com/ghcr.io/allexveldman/"

      - name: Install
        run: |
          just examples uv-install "${{ steps.version.outputs.VERSION }}" "${{ github.actor }}" "$TOKEN" "https://pyoci.com/ghcr.io/allexveldman/"
