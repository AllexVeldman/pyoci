
# Helper to output github log grouping when run in a github workflow
_group name:
    @echo "{{ if env_var_or_default("GITHUB_WORKFLOW", "") != "" { "::group::"+name } else { "" } }}"

_endgroup:
    @echo "{{ if env_var_or_default("GITHUB_WORKFLOW", "") != "" { "::endgroup::" } else { "" } }}"

# Publish using the `poetry` package manager
[group("poetry")]
poetry-publish version username="" token="" repository="https://pyoci.com/ghcr.io/allexveldman/": (_group "poetry-publish") && _endgroup
    #!/usr/bin/env bash
    set -exuo pipefail

    cd ./poetry/publish
    poetry config --local repositories.pyoci "{{repository}}"
    poetry version "{{version}}"
    poetry build
    poetry publish -n -r pyoci -u "{{username}}" -p "{{token}}"

[group("poetry")]
poetry-install version username="" token="" repository="https://pyoci.com/ghcr.io/allexveldman/": (_group "poetry-install") && _endgroup
    #!/usr/bin/env bash
    set -exuo pipefail

    cd ./poetry/install

    # Setup the registry source credentials
    poetry source add --priority=explicit pyoci "{{repository}}"
    export POETRY_HTTP_BASIC_PYOCI_USERNAME={{username}}
    export POETRY_HTTP_BASIC_PYOCI_PASSWORD={{token}}

    poetry add "hello-world@{{version}}" --source pyoci --no-cache
    poetry run python -m hello_world

[group("curl")]
curl-publish version username token repository="http://localhost:8080/ghcr.io/allexveldman/": (_group "curl-publish") && _endgroup
    #!/usr/bin/env bash
    set -exuo pipefail

    cd ./poetry/publish
    poetry version {{version}}
    poetry build -f sdist
    curl -v {{repository}} \
    --fail-with-body \
    -u {{username}}:{{token}} \
    -F ":action=file_upload" \
    -F protocol_version=1 \
    -F filetype=sdist \
    -F pyversion=source \
    -F metadata_version=2.3 \
    -F name=hello_world \
    -F version={{version}} \
    -F content=@dist/hello_world-{{version}}.tar.gz

[group("curl")]
curl-list username token repository="http://localhost:8080/ghcr.io/allexveldman/": (_group "curl-list") && _endgroup
    curl -v --fail-with-body -u {{username}}:{{token}} {{repository}}hello-world/

[group("curl")]
curl-list-json username token repository="http://localhost:8080/ghcr.io/allexveldman/": (_group "curl-list-json") && _endgroup
    curl -v --fail-with-body -u {{username}}:{{token}} {{repository}}hello-world/json

[group("curl")]
curl-download version username token repository="http://localhost:8080/ghcr.io/allexveldman/": (_group "curl-download") && _endgroup
    curl -vOJ --fail-with-body -u {{username}}:{{token}} {{repository}}hello_world/hello_world-{{version}}.tar.gz
    rm hello_world-{{version}}.tar.gz

[group("curl")]
curl-delete version username token repository="http://localhost:8080/ghcr.io/allexveldman/": (_group "curl-delete") && _endgroup
    curl -v --fail-with-body -u {{username}}:{{token}} -X "DELETE" {{repository}}hello-world/{{version}}

# Undo changes in the examples to the most recent commit
reset:
   git checkout -- \
   ./poetry/install/pyproject.toml \
   ./poetry/publish/poetry.toml \
   ./poetry/publish/pyproject.toml
